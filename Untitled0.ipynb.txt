{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jNXuRzjh6EnO"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#T1\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال‌ها\n",
        "x = np.array([1, 2, 0, -1])  # x[n]\n",
        "h = np.array([2, 0, -2])  # h[n]\n",
        "\n",
        "# محاسبه کانولوشن برای هر حالت\n",
        "y1 = np.convolve(x, h, mode='full')  # y1[n] = x[n] * h[n]\n",
        "y2 = np.convolve(np.roll(x, -2), h, mode='full')  # y2[n] = x[n+2] * h[n]\n",
        "y3 = np.convolve(x, np.roll(h, 2), mode='full')  # y3[n] = x[n] * h[n+2]\n",
        "\n",
        "# رسم نمودارها\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "plt.subplot(3, 1, 1)\n",
        "plt.stem(y1)\n",
        "plt.title('y1[n] = x[n] * h[n]')\n",
        "\n",
        "plt.subplot(3, 1, 2)\n",
        "plt.stem(y2)\n",
        "plt.title('y2[n] = x[n+2] * h[n]')\n",
        "\n",
        "plt.subplot(3, 1, 3)\n",
        "plt.stem(y3)\n",
        "plt.title('y3[n] = x[n] * h[n+2]')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "#T2\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# سوال 2.2\n",
        "def h(n):\n",
        "    return (0.5) ** (n - 1) * ((n >= -3) & (n <= 9))\n",
        "\n",
        "\n",
        "    # رسم نمودار سوال 2.2\n",
        "    n_values = np.arange(-5, 15)\n",
        "    h_values = h(n_values)\n",
        "\n",
        "    plt.figure(figsize=(8, 4))\n",
        "    plt.stem(n_values, h_values)\n",
        "    plt.title('h[n] برای سوال 2.2')\n",
        "    plt.xlabel('n')\n",
        "    plt.ylabel('h[n]')\n",
        "    plt.grid(True)\n",
        "    plt.show()\n",
        "\n",
        "    #T3\n",
        "    import numpy as np\n",
        "    import matplotlib.pyplot as plt\n",
        "\n",
        "    # تعریف سیگنال‌ها\n",
        "    n = np.arange(-5, 10)  # بازه زمانی\n",
        "    x = (0.5) ** (n - 2) * (n >= 2)  # x[n]\n",
        "    h = (n >= -2)  # h[n]\n",
        "\n",
        "    # محاسبه کانولوشن\n",
        "    y = np.convolve(x, h, mode='full')\n",
        "\n",
        "    # رسم نمودارها\n",
        "    plt.figure(figsize=(12, 4))\n",
        "\n",
        "    plt.subplot(1, 3, 1)\n",
        "    plt.stem(n, x[:len(n)])\n",
        "    plt.title('x[n]')\n",
        "\n",
        "    plt.subplot(1, 3, 2)\n",
        "    plt.stem(n, h[:len(n)])\n",
        "    plt.title('h[n]')\n",
        "\n",
        "    plt.subplot(1, 3, 3)\n",
        "    plt.stem(np.arange(len(y)) - 5, y)\n",
        "    plt.title('y[n] = x[n] * h[n]')\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    #T4\n",
        "    import numpy as np\n",
        "    import matplotlib.pyplot as plt\n",
        "\n",
        "    # تعریف سیگنال‌ها\n",
        "    n = np.arange(0, 20)  # بازه زمانی\n",
        "    x = np.zeros(20)\n",
        "    x[3:9] = 1\n",
        "    h = np.zeros(20)\n",
        "    h[4:16] = 1\n",
        "\n",
        "    # محاسبه کانولوشن\n",
        "    y = np.convolve(x, h, mode='full')\n",
        "\n",
        "    # رسم نمودارها\n",
        "    plt.figure(figsize=(12, 4))\n",
        "\n",
        "    plt.subplot(1, 3, 1)\n",
        "    plt.stem(n, x)\n",
        "    plt.title('x[n]')\n",
        "\n",
        "    plt.subplot(1, 3, 2)\n",
        "    plt.stem(n, h)\n",
        "    plt.title('h[n]')\n",
        "\n",
        "    plt.subplot(1, 3, 3)\n",
        "    plt.stem(np.arange(len(y)), y)\n",
        "    plt.title('y[n] = x[n] * h[n]')\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    #T5\n",
        "    import numpy as np\n",
        "    import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "    # سوال 2.5\n",
        "    def convolution(x, h):\n",
        "        y = np.convolve(x, h, mode='full')\n",
        "            return y\n",
        "\n",
        "            N = 4\n",
        "            x = np.ones(10)\n",
        "            h = np.ones(N + 1)\n",
        "            y = convolution(x, h)\n",
        "\n",
        "            print(f\"مقدار N برای سوال 2.5 برابر است با: {N}\")\n",
        "            print(f\"مقدار y[4] برابر است با: {y[4]}\")\n",
        "            print(f\"مقدار y[14] برابر است با: {y[14]}\")\n",
        "\n",
        "            # رسم نمودار سوال 2.5\n",
        "            plt.figure(figsize=(12, 4))\n",
        "\n",
        "            plt.subplot(1, 3, 1)\n",
        "            plt.stem(np.arange(len(x)), x)\n",
        "            plt.title('x[n]')\n",
        "\n",
        "            plt.subplot(1, 3, 2)\n",
        "            plt.stem(np.arange(len(h)), h)\n",
        "            plt.title('h[n]')\n",
        "\n",
        "            plt.subplot(1, 3, 3)\n",
        "            plt.stem(np.arange(len(y)), y)\n",
        "            plt.title('y[n] = x[n] * h[n]')\n",
        "\n",
        "            plt.tight_layout()\n",
        "            plt.show()\n",
        "\n",
        "            #T6\n",
        "            import numpy as np\n",
        "            import matplotlib.pyplot as plt\n",
        "\n",
        "            # تعریف سیگنال‌ها\n",
        "            n = np.arange(-10, 10)  # بازه زمانی\n",
        "            x = (1/3) ** (-n) * (n <= -1)  # x[n]\n",
        "            h = (n >= 1)  # h[n]\n",
        "\n",
        "            # محاسبه کانولوشن\n",
        "            y = np.convolve(x, h, mode='full')\n",
        "\n",
        "            # رسم نمودارها\n",
        "            plt.figure(figsize=(12, 4))\n",
        "\n",
        "            plt.subplot(1, 3, 1)\n",
        "            plt.stem(n, x[:len(n)])\n",
        "            plt.title('x[n]')\n",
        "\n",
        "            plt.subplot(1, 3, 2)\n",
        "            plt.stem(n, h[:len(n)])\n",
        "            plt.title('h[n]')\n",
        "\n",
        "            plt.subplot(1, 3, 3)\n",
        "            plt.stem(np.arange(len(y)) - 10, y)\n",
        "            plt.title('y[n] = x[n] * h[n]')\n",
        "\n",
        "            plt.tight_layout()\n",
        "            plt.show()\n",
        "\n",
        "\n",
        "            #T7\n",
        "            import numpy as np\n",
        "            import matplotlib.pyplot as plt\n",
        "\n",
        "            def g(n):\n",
        "                return (n >= 0) * (n < 4)\n",
        "\n",
        "                def y(x, n):\n",
        "                    result = 0\n",
        "                        for k in range(-10, 10):  # بازه زمانی مناسب را انتخاب کنید\n",
        "                                if n - 2 * k >= -10 and n - 2 * k <= 10:\n",
        "                                            result += x[k + 10] * g(n - 2 * k)\n",
        "                                                return result\n",
        "\n",
        "                                                n = np.arange(-5, 10)\n",
        "                                                x1 = np.zeros(20)\n",
        "                                                x1[11] = 1  # delta[n-1]\n",
        "                                                x2 = np.zeros(20)\n",
        "                                                x2[12] = 1  # delta[n-2]\n",
        "                                                x3 = np.ones(15) # u[n]\n",
        "\n",
        "                                                y1 = [y(x1, i) for i in n]\n",
        "                                                y2 = [y(x2, i) for i in n]\n",
        "                                                y3 = [y(x3, i) for i in n]\n",
        "\n",
        "                                                plt.figure(figsize=(12, 4))\n",
        "                                                plt.subplot(1, 3, 1)\n",
        "                                                plt.stem(n, y1)\n",
        "                                                plt.title('y[n] for delta[n-1]')\n",
        "                                                plt.subplot(1, 3, 2)\n",
        "                                                plt.stem(n, y2)\n",
        "                                                plt.title('y[n] for delta[n-2]')\n",
        "                                                plt.subplot(1, 3, 3)\n",
        "                                                plt.stem(n, y3)\n",
        "                                                plt.title('y[n] for u[n]')\n",
        "                                                plt.tight_layout()\n",
        "                                                plt.show()\n",
        "\n",
        "                                                #T8\n",
        "                                                import numpy as np\n",
        "                                                import matplotlib.pyplot as plt\n",
        "\n",
        "                                                def x(t):\n",
        "                                                    if 0 <= t <= 1:\n",
        "                                                            return t + 1\n",
        "                                                                elif 1 < t <= 2:\n",
        "                                                                        return 2 - t\n",
        "                                                                            else:\n",
        "                                                                                    return 0\n",
        "\n",
        "                                                                                    def h(t):\n",
        "                                                                                        if t == -2:\n",
        "                                                                                                return 1\n",
        "                                                                                                    elif t == -1:\n",
        "                                                                                                            return 2\n",
        "                                                                                                                else:\n",
        "                                                                                                                        return 0\n",
        "\n",
        "                                                                                                                        t = np.arange(-3, 4, 0.1)\n",
        "                                                                                                                        y = [x(ti + 2) + 2 * x(ti + 1) for ti in t]\n",
        "\n",
        "                                                                                                                        plt.figure(figsize=(8, 4))\n",
        "                                                                                                                        plt.plot(t, y)\n",
        "                                                                                                                        plt.title('y(t) = x(t) * h(t)')\n",
        "                                                                                                                        plt.xlabel('t')\n",
        "                                                                                                                        plt.ylabel('y(t)')\n",
        "                                                                                                                        plt.grid(True)\n",
        "                                                                                                                        plt.show()\n",
        "\n",
        "                                                                                                                        #T9\n",
        "                                                                                                                        import numpy as np\n",
        "                                                                                                                        import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                        def h(t):\n",
        "                                                                                                                            return np.exp(2 * t) * (t <= 4) + np.exp(-2 * t) * (t >= 5)\n",
        "\n",
        "                                                                                                                            t = np.arange(0, 10, 0.1)\n",
        "                                                                                                                            y = h(t)\n",
        "\n",
        "                                                                                                                            plt.figure(figsize=(8, 4))\n",
        "                                                                                                                            plt.plot(t, y)\n",
        "                                                                                                                            plt.title('h(t)')\n",
        "                                                                                                                            plt.xlabel('t')\n",
        "                                                                                                                            plt.ylabel('h(t)')\n",
        "                                                                                                                            plt.grid(True)\n",
        "                                                                                                                            plt.show()\n",
        "\n",
        "                                                                                                                            #T10\n",
        "                                                                                                                            import numpy as np\n",
        "                                                                                                                            import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                            alpha = 0.5  # مقدار آلفا را تنظیم کنید\n",
        "\n",
        "                                                                                                                            def x(t):\n",
        "                                                                                                                                return (0 <= t <= 1)\n",
        "\n",
        "                                                                                                                                def h(t):\n",
        "                                                                                                                                    return x(t / alpha)\n",
        "\n",
        "                                                                                                                                    t = np.arange(-1, 2, 0.1)\n",
        "                                                                                                                                    y = np.convolve([x(ti) for ti in t], [h(ti) for ti in t], mode='same')\n",
        "\n",
        "                                                                                                                                    plt.figure(figsize=(8, 4))\n",
        "                                                                                                                                    plt.plot(t, y)\n",
        "                                                                                                                                    plt.title('y(t) = x(t) * h(t)')\n",
        "                                                                                                                                    plt.xlabel('t')\n",
        "                                                                                                                                    plt.ylabel('y(t)')\n",
        "                                                                                                                                    plt.grid(True)\n",
        "                                                                                                                                    plt.show()\n",
        "\n",
        "                                                                                                                                    #T11\n",
        "                                                                                                                                    import numpy as np\n",
        "                                                                                                                                    import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                    def x(t):\n",
        "                                                                                                                                        return (3 <= t <= 5)\n",
        "\n",
        "                                                                                                                                        def h(t):\n",
        "                                                                                                                                            return np.exp(-3 * t) * (t >= 0)\n",
        "\n",
        "                                                                                                                                            t = np.arange(0, 10, 0.1)\n",
        "                                                                                                                                            y = np.convolve([x(ti) for ti in t], [h(ti) for ti in t], mode='full')\n",
        "                                                                                                                                            dx = np.gradient([x(ti) for ti in t], 0.1)\n",
        "                                                                                                                                            g = np.convolve(dx, [h(ti) for ti in t], mode='full')\n",
        "\n",
        "                                                                                                                                            plt.figure(figsize=(12, 4))\n",
        "                                                                                                                                            plt.subplot(1, 2, 1)\n",
        "                                                                                                                                            plt.plot(y)\n",
        "                                                                                                                                            plt.title('y(t) = x(t) * h(t)')\n",
        "                                                                                                                                            plt.subplot(1, 2, 2)\n",
        "                                                                                                                                            plt.plot(g)\n",
        "                                                                                                                                            plt.title('g(t) = dx(t)/dt * h(t)')\n",
        "                                                                                                                                            plt.tight_layout()\n",
        "                                                                                                                                            plt.show()\n",
        "\n",
        "                                                                                                                                            #T12\n",
        "                                                                                                                                            import numpy as np\n",
        "                                                                                                                                            import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                            def y(t):\n",
        "                                                                                                                                                result = 0\n",
        "                                                                                                                                                    for k in range(-5, 5):  # بازه زمانی مناسب را انتخاب کنید\n",
        "                                                                                                                                                            result += np.exp(-(t - 3 * k)) * ((t - 3 * k) >= 0)\n",
        "                                                                                                                                                                return result\n",
        "\n",
        "                                                                                                                                                                t = np.arange(0, 10, 0.1)\n",
        "                                                                                                                                                                y_values = [y(ti) for ti in t]\n",
        "\n",
        "                                                                                                                                                                plt.figure(figsize=(8, 4))\n",
        "                                                                                                                                                                plt.plot(t, y_values)\n",
        "                                                                                                                                                                plt.title('y(t)')\n",
        "                                                                                                                                                                plt.xlabel('t')\n",
        "                                                                                                                                                                plt.ylabel('y(t)')\n",
        "                                                                                                                                                                plt.grid(True)\n",
        "                                                                                                                                                                plt.show()\n",
        "\n",
        "                                                                                                                                                                #T13\n",
        "                                                                                                                                                                import numpy as np\n",
        "                                                                                                                                                                import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                def h(n):\n",
        "                                                                                                                                                                    return (1/5)**n * (n >= 0)\n",
        "\n",
        "                                                                                                                                                                    # (الف)\n",
        "                                                                                                                                                                    A = 1/5\n",
        "                                                                                                                                                                    print(f\"مقدار A: {A}\")\n",
        "\n",
        "                                                                                                                                                                    # (ب)\n",
        "                                                                                                                                                                    # g[n] = 5 * delta[n] - delta[n-1]\n",
        "                                                                                                                                                                    def g(n):\n",
        "                                                                                                                                                                        if n == 0:\n",
        "                                                                                                                                                                                return 5\n",
        "                                                                                                                                                                                    elif n == 1:\n",
        "                                                                                                                                                                                            return -1\n",
        "                                                                                                                                                                                                else:\n",
        "                                                                                                                                                                                                        return 0\n",
        "\n",
        "                                                                                                                                                                                                        n = np.arange(-2, 5)\n",
        "                                                                                                                                                                                                        h_values = h(n)\n",
        "                                                                                                                                                                                                        g_values = [g(i) for i in n]\n",
        "\n",
        "                                                                                                                                                                                                        plt.figure(figsize=(10, 4))\n",
        "                                                                                                                                                                                                        plt.subplot(1, 2, 1)\n",
        "                                                                                                                                                                                                        plt.stem(n, h_values)\n",
        "                                                                                                                                                                                                        plt.title('h[n]')\n",
        "                                                                                                                                                                                                        plt.subplot(1, 2, 2)\n",
        "                                                                                                                                                                                                        plt.stem(n, g_values)\n",
        "                                                                                                                                                                                                        plt.title('g[n]')\n",
        "                                                                                                                                                                                                        plt.tight_layout()\n",
        "                                                                                                                                                                                                        plt.show()\n",
        "\n",
        "                                                                                                                                                                                                        #T14\n",
        "                                                                                                                                                                                                        import numpy as np\n",
        "                                                                                                                                                                                                        import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                        def h1(t):\n",
        "                                                                                                                                                                                                            return np.exp(-abs(t - 2)) * (t >= 0)\n",
        "\n",
        "                                                                                                                                                                                                            def h2(t):\n",
        "                                                                                                                                                                                                                return np.exp(-t) * np.cos(2 * t) * (t >= 0)\n",
        "\n",
        "                                                                                                                                                                                                                t = np.arange(0, 5, 0.1)\n",
        "                                                                                                                                                                                                                y1 = h1(t)\n",
        "                                                                                                                                                                                                                y2 = h2(t)\n",
        "\n",
        "                                                                                                                                                                                                                plt.figure(figsize=(10, 4))\n",
        "                                                                                                                                                                                                                plt.subplot(1, 2, 1)\n",
        "                                                                                                                                                                                                                plt.plot(t, y1)\n",
        "                                                                                                                                                                                                                plt.title('h1(t)')\n",
        "                                                                                                                                                                                                                plt.subplot(1, 2, 2)\n",
        "                                                                                                                                                                                                                plt.plot(t, y2)\n",
        "                                                                                                                                                                                                                plt.title('h2(t)')\n",
        "                                                                                                                                                                                                                plt.tight_layout()\n",
        "                                                                                                                                                                                                                plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                # برای بررسی پایداری، انتگرال مطلق را بررسی کنید (به صورت عددی)\n",
        "                                                                                                                                                                                                                print(f\"انتگرال h1: {np.sum(np.abs(y1)) * 0.1}\")\n",
        "                                                                                                                                                                                                                print(f\"انتگرال h2: {np.sum(np.abs(y2)) * 0.1}\")\n",
        "\n",
        "                                                                                                                                                                                                                #T15\n",
        "                                                                                                                                                                                                                import numpy as np\n",
        "                                                                                                                                                                                                                import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                                def h1(n):\n",
        "                                                                                                                                                                                                                    return n * np.cos(np.pi / 4 * n) * (n >= 0)\n",
        "\n",
        "                                                                                                                                                                                                                    def h2(n):\n",
        "                                                                                                                                                                                                                        return 3**n * (n <= 10)\n",
        "\n",
        "                                                                                                                                                                                                                        n = np.arange(0, 15)\n",
        "                                                                                                                                                                                                                        y1 = h1(n)\n",
        "                                                                                                                                                                                                                        y2 = h2(n)\n",
        "\n",
        "                                                                                                                                                                                                                        plt.figure(figsize=(10, 4))\n",
        "                                                                                                                                                                                                                        plt.subplot(1, 2, 1)\n",
        "                                                                                                                                                                                                                        plt.stem(n, y1)\n",
        "                                                                                                                                                                                                                        plt.title('h1[n]')\n",
        "                                                                                                                                                                                                                        plt.subplot(1, 2, 2)\n",
        "                                                                                                                                                                                                                        plt.stem(n, y2)\n",
        "                                                                                                                                                                                                                        plt.title('h2[n]')\n",
        "                                                                                                                                                                                                                        plt.tight_layout()\n",
        "                                                                                                                                                                                                                        plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                        # برای بررسی پایداری، مجموع مطلق را بررسی کنید\n",
        "                                                                                                                                                                                                                        print(f\"مجموع h1: {np.sum(np.abs(y1))}\")\n",
        "                                                                                                                                                                                                                        print(f\"مجموع h2: {np.sum(np.abs(y2))}\")\n",
        "\n",
        "                                                                                                                                                                                                                        #T16\n",
        "                                                                                                                                                                                                                        import numpy as np\n",
        "\n",
        "                                                                                                                                                                                                                        # (الف)\n",
        "                                                                                                                                                                                                                        x = np.array([1, 2, 3])\n",
        "                                                                                                                                                                                                                        h = np.array([4, 5, 6])\n",
        "                                                                                                                                                                                                                        y = np.convolve(x, h)\n",
        "                                                                                                                                                                                                                        print(f\"کانولوشن: {y}\")\n",
        "\n",
        "                                                                                                                                                                                                                        # (ب)\n",
        "                                                                                                                                                                                                                        x = np.array([1, 2, 3])\n",
        "                                                                                                                                                                                                                        h = np.array([4, 5, 6])\n",
        "                                                                                                                                                                                                                        y = np.convolve(x, h)\n",
        "                                                                                                                                                                                                                        y_shifted = np.convolve(np.roll(x, -1), np.roll(h, -1))\n",
        "                                                                                                                                                                                                                        print(f\"y[n-1]: {y_shifted}\")\n",
        "\n",
        "                                                                                                                                                                                                                        # (ج)\n",
        "                                                                                                                                                                                                                        # ...\n",
        "\n",
        "                                                                                                                                                                                                                        # (د)\n",
        "                                                                                                                                                                                                                        # ...\n",
        "\n",
        "                                                                                                                                                                                                                        #T17\n",
        "                                                                                                                                                                                                                        import numpy as np\n",
        "                                                                                                                                                                                                                        import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                                        def y(t, x):\n",
        "                                                                                                                                                                                                                            # حل معادله دیفرانسیل به صورت عددی\n",
        "                                                                                                                                                                                                                                dt = 0.01\n",
        "                                                                                                                                                                                                                                    y_values = [0]\n",
        "                                                                                                                                                                                                                                        for i in range(1, len(t)):\n",
        "                                                                                                                                                                                                                                                dy = x[i] - 4 * y_values[i - 1]\n",
        "                                                                                                                                                                                                                                                        y_values.append(y_values[i - 1] + dy * dt)\n",
        "                                                                                                                                                                                                                                                            return np.array(y_values)\n",
        "\n",
        "                                                                                                                                                                                                                                                            t = np.arange(0, 5, 0.01)\n",
        "\n",
        "                                                                                                                                                                                                                                                            # (الف)\n",
        "                                                                                                                                                                                                                                                            x1 = np.exp(-t) * (t >= 0)\n",
        "                                                                                                                                                                                                                                                            y1 = y(t, x1)\n",
        "\n",
        "                                                                                                                                                                                                                                                            # (ب)\n",
        "                                                                                                                                                                                                                                                            x2 = np.exp(-t) * np.cos(3 * t) * (t >= 0)\n",
        "                                                                                                                                                                                                                                                            y2 = y(t, x2)\n",
        "\n",
        "                                                                                                                                                                                                                                                            plt.figure(figsize=(10, 4))\n",
        "                                                                                                                                                                                                                                                            plt.subplot(1, 2, 1)\n",
        "                                                                                                                                                                                                                                                            plt.plot(t, y1)\n",
        "                                                                                                                                                                                                                                                            plt.title('y(t) for x1(t)')\n",
        "                                                                                                                                                                                                                                                            plt.subplot(1, 2, 2)\n",
        "                                                                                                                                                                                                                                                            plt.plot(t, y2)\n",
        "                                                                                                                                                                                                                                                            plt.title('y(t) for x2(t)')\n",
        "                                                                                                                                                                                                                                                            plt.tight_layout()\n",
        "                                                                                                                                                                                                                                                            plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                                                            #T18\n",
        "                                                                                                                                                                                                                                                            import numpy as np\n",
        "                                                                                                                                                                                                                                                            import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                                                                            def y(x):\n",
        "                                                                                                                                                                                                                                                                y_values = [0]\n",
        "                                                                                                                                                                                                                                                                    for i in range(1, len(x)):\n",
        "                                                                                                                                                                                                                                                                            y_values.append(0.25 * y_values[i - 1] + x[i])\n",
        "                                                                                                                                                                                                                                                                                return np.array(y_values)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                n = np.arange(0, 10)\n",
        "                                                                                                                                                                                                                                                                                x = np.ones(10)\n",
        "                                                                                                                                                                                                                                                                                y_values = y(x)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                plt.figure(figsize=(8, 4))\n",
        "                                                                                                                                                                                                                                                                                plt.stem(n, y_values)\n",
        "                                                                                                                                                                                                                                                                                plt.title('y[n]')\n",
        "                                                                                                                                                                                                                                                                                plt.xlabel('n')\n",
        "                                                                                                                                                                                                                                                                                plt.ylabel('y[n]')\n",
        "                                                                                                                                                                                                                                                                                plt.grid(True)\n",
        "                                                                                                                                                                                                                                                                                plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                                                                                #T19\n",
        "                                                                                                                                                                                                                                                                                import numpy as np\n",
        "                                                                                                                                                                                                                                                                                import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                                                                                                # (الف)\n",
        "                                                                                                                                                                                                                                                                                alpha = 0.75\n",
        "                                                                                                                                                                                                                                                                                beta = 1\n",
        "                                                                                                                                                                                                                                                                                print(f\"مقدار آلفا: {alpha}\")\n",
        "                                                                                                                                                                                                                                                                                print(f\"مقدار بتا: {beta}\")\n",
        "\n",
        "                                                                                                                                                                                                                                                                                # (ب)\n",
        "                                                                                                                                                                                                                                                                                def h1(n):\n",
        "                                                                                                                                                                                                                                                                                    if n == 0:\n",
        "                                                                                                                                                                                                                                                                                            return 1\n",
        "                                                                                                                                                                                                                                                                                                else:\n",
        "                                                                                                                                                                                                                                                                                                        return 0.5 * h1(n - 1)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                        def h2(n):\n",
        "                                                                                                                                                                                                                                                                                                            if n == 0:\n",
        "                                                                                                                                                                                                                                                                                                                    return beta\n",
        "                                                                                                                                                                                                                                                                                                                        else:\n",
        "                                                                                                                                                                                                                                                                                                                                return alpha * h2(n - 1)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                def h_cascade(n):\n",
        "                                                                                                                                                                                                                                                                                                                                    result = 0\n",
        "                                                                                                                                                                                                                                                                                                                                        for k in range(n + 1):\n",
        "                                                                                                                                                                                                                                                                                                                                                result += h1(k) * h2(n - k)\n",
        "                                                                                                                                                                                                                                                                                                                                                    return result\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    n = np.arange(0, 5)\n",
        "                                                                                                                                                                                                                                                                                                                                                    h_values = [h_cascade(i) for i in n]\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.figure(figsize=(8, 4))\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.stem(n, h_values)\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.title('پاسخ ضربه سیستم متوالی')\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.xlabel('n')\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.ylabel('h[n]')\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.grid(True)\n",
        "                                                                                                                                                                                                                                                                                                                                                    plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    #T20\n",
        "                                                                                                                                                                                                                                                                                                                                                    import numpy as np\n",
        "                                                                                                                                                                                                                                                                                                                                                    import sympy as sp\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    # (الف)\n",
        "                                                                                                                                                                                                                                                                                                                                                    t = sp.Symbol('t')\n",
        "                                                                                                                                                                                                                                                                                                                                                    integral_a = sp.integrate(sp.cos(t), (t, -sp.oo, sp.oo))\n",
        "                                                                                                                                                                                                                                                                                                                                                    print(f\"انتگرال (الف): {integral_a}\")\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    # (ب)\n",
        "                                                                                                                                                                                                                                                                                                                                                    integral_b = sp.integrate(sp.sin(2 * sp.pi * t) * sp.DiracDelta(t + 3), (t, 0, 5))\n",
        "                                                                                                                                                                                                                                                                                                                                                    print(f\"انتگرال (ب): {integral_b}\")\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    # (ج)\n",
        "                                                                                                                                                                                                                                                                                                                                                    tau = sp.Symbol('tau')\n",
        "                                                                                                                                                                                                                                                                                                                                                    integral_c = sp.integrate(sp.Heaviside(1 - tau) * sp.cos(2 * sp.pi * tau), (tau, -5, 5))\n",
        "                                                                                                                                                                                                                                                                                                                                                    print(f\"انتگرال (ج): {integral_c}\")\n",
        "\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    #T21\n",
        "                                                                                                                                                                                                                                                                                                                                                    import numpy as np\n",
        "                                                                                                                                                                                                                                                                                                                                                    import matplotlib.pyplot as plt\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                    # (الف)\n",
        "                                                                                                                                                                                                                                                                                                                                                    def convolution_a(n):\n",
        "                                                                                                                                                                                                                                                                                                                                                        return (n + 1) * (n >= 0)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                        # (ب)\n",
        "                                                                                                                                                                                                                                                                                                                                                        def convolution_b(n, a, b):\n",
        "                                                                                                                                                                                                                                                                                                                                                            if a == b:\n",
        "                                                                                                                                                                                                                                                                                                                                                                    return (n + 1) * a**n * (n >= 0)\n",
        "                                                                                                                                                                                                                                                                                                                                                                        else:\n",
        "                                                                                                                                                                                                                                                                                                                                                                                return (a**(n + 1) - b**(n + 1)) / (a - b) * (n >= 0)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                # (ج)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                def convolution_c(n):\n",
        "                                                                                                                                                                                                                                                                                                                                                                                    result = 0\n",
        "                                                                                                                                                                                                                                                                                                                                                                                        for k in range(-10, 10):\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                if 2 - k >= -10 and 2 - k <= 10 and n - k >= 4 and n - k <= 10:\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                            result += (-0.5)**(n - k) * 4**k\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                return result\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                # (د)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                x = np.array([0, 0, 1, 1, 1, 0, 0])\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                h = np.array([0, 0, 0, 0, 1, 1, 1, 1, 0, 0])\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                y_d = np.convolve(x, h)\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                n = np.arange(0, 10)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                y_a = convolution_a(n)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                y_b = convolution_b(n, 0.5, 0.8)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                y_c = [convolution_c(i) for i in n]\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.figure(figsize=(12, 6))\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.subplot(2, 2, 1)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.stem(n, y_a)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.title('کانولوشن (الف)')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.subplot(2, 2, 2)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.stem(n, y_b)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.title('کانولوشن (ب)')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.subplot(2, 2, 3)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.stem(n, y_c)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.title('کانولوشن (ج)')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.subplot(2, 2, 4)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.stem(np.arange(len(y_d)), y_d)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.title('کانولوشن (د)')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.tight_layout()\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                #T22\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                import numpy as np\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                import matplotlib.pyplot as plt\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                from scipy import signal\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                # مثال 1: x(t) = u(t), h(t) = e^-t u(t)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                t = np.arange(0, 5, 0.1)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                x = np.ones(len(t))\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                h = np.exp(-t)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                y = signal.convolve(x, h, mode='same') * 0.1\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.figure(figsize=(8, 4))\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.plot(t, y)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.title('کانولوشن مثال 1')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.xlabel('t')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.ylabel('y(t)')\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.grid(True)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                plt.show()\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                # مثال 2: x(t) = rect(t), h(t) = tri(t)\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                # ... (محاسبات و رسم نمودار برای مثال‌های دیگر)\n",
        "\n",
        "\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                #T23\n",
        "                                                                                                                                                                                                                                                                                                                                                                                                                "
      ],
      "metadata": {
        "id": "W9GSHNj-6FSb"
      }
    }
  ]
}